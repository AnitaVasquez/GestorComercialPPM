@model GestionPPM.Entidades.Modelo.Contactos

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@* Formato para el template de datos *@
<link href="~/Content/css/personalizar.css" rel="stylesheet" />

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>


@using (Html.BeginForm())
{
    

    <div class="row">
        <div class="col-md-offset-2 col-md-8">
            <div class="panel">

                <div class="panel-heading-create custom-header-panel">
                    <h4>@Etiquetas.TituloPanelCreacionContacto</h4>
                </div>

                <div class="panel-body">

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="tipo_contacto form-group">
                            <label class="control-label col-md-2">Tipo: <span class="requerido"> *</span></label>
                            <div class="col-md-10">
                                @Html.DropDownList("CodigoCatalogoTipoContacto", ViewBag.ListadoTipoContacto as List<SelectListItem>, new { @class = "form-control campo-requerido" })
                            </div>
                        </div>

                        @*<div style="display: none;" class="form-group id_cliente">
                                @Html.LabelFor(model => model.id_cliente, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.id_cliente, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.id_cliente, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="form-group nombre_contacto">
                            <label class="control-label col-md-2">Nombre: <span class="requerido"> *</span></label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.nombre_contacto, new { htmlAttributes = new { @class = "form-control campo-requerido", maxlength = 150 } })
                                @Html.ValidationMessageFor(model => model.nombre_contacto, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group apellido_contacto">
                            <label class="control-label col-md-2">Apellidos: <span class="requerido"> *</span></label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.apellido_contacto, new { htmlAttributes = new { @class = "form-control campo-requerido", maxlength = 200 } })
                                @Html.ValidationMessageFor(model => model.apellido_contacto, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group cargo_contacto">
                            <label class="control-label col-md-2">Cargo: <span class="requerido"> *</span></label>
                            <div class="col-md-10">
                                <input id="cargo_contacto" name="cargo_contacto" class="form-control advancedAutoComplete auto-ajustar campo-requerido" type="text" autocomplete="off" placeholder="Búsqueda">
                                @Html.Hidden("CodigoCatalogoCargoContacto", "")
                            </div>
                        </div>

                        <div class="form-group mail_contacto">
                            <label class="control-label col-md-2">Mail: <span class="requerido"> *</span></label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.mail_contacto, new { htmlAttributes = new { @class = "form-control campo-requerido", maxlength = 300 } })
                                @Html.ValidationMessageFor(model => model.mail_contacto, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group telefono_contacto">
                            <label class="control-label col-md-2">Teléfono: <span class="requerido"> *</span></label>
                            <div class="col-md-10" onkeypress="if ( isNaN( String.fromCharCode(event.keyCode) )) return false;">
                                @Html.EditorFor(model => model.telefono_contacto, new { htmlAttributes = new { @class = "form-control campo-requerido", maxlength = 15, @type = "number", @min = "0" } })
                                @Html.ValidationMessageFor(model => model.telefono_contacto, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group extension_contacto">
                            <label class="control-label col-md-2">Extensión:</label>
                            <div class="col-md-10" onkeypress="if ( isNaN( String.fromCharCode(event.keyCode) )) return false;">
                                @Html.EditorFor(model => model.extension_contacto, new { htmlAttributes = new { @class = "form-control", maxlength = 5, @type = "number", @min = "0" } })
                                @Html.ValidationMessageFor(model => model.extension_contacto, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group prefijo_pais">
                            <label class="control-label col-md-2">Prefijo: <span class="requerido"> *</span></label>
                            <div class="col-md-10" onkeypress="if ( isNaN( String.fromCharCode(event.keyCode) )) return false;">
                                @Html.EditorFor(model => model.prefijo_pais, new { htmlAttributes = new { @class = "form-control campo-requerido", maxlength = 5, @type = "number", @min = "0" } })
                                @Html.ValidationMessageFor(model => model.prefijo_pais, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group celular_contacto">
                            <label class="control-label col-md-2">Celular:</label>
                            <div class="col-md-10" onkeypress="if ( isNaN( String.fromCharCode(event.keyCode) )) return false;">
                                @Html.EditorFor(model => model.celular_contacto, new { htmlAttributes = new { @class = "form-control", maxlength = 15, @type = "number", @min = "0" } })
                                @Html.ValidationMessageFor(model => model.celular_contacto, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-4 col-md-12">
                                <input type="submit" value="Guardar" class="btn btn-default" />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-default" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


}


@section ViewSpecificJavascript {
    <script>
        var errores = @Html.Raw(Json.Encode(ViewBag.Resultado));
        // Ocultar o Mostrar campos según el tipo de Cliente
        var camposOcultarContactoFacturacion = ["prefijo_pais", "celular_contacto"];
        var camposOcultarContactoCliente = ["mail_contacto"];

        $(document).ready(function () {
            debugger
            //if ($("#CodigoCatalogoTipoContacto").val() == 260) {
            //   ocultarListadoElementos(camposOcultarContactoCliente)
            //}
            //if ($("#CodigoCatalogoTipoContacto").val() == 261) {
            //    ocultarListadoElementos(camposOcultarContactoFacturacion)
            //}

            if (errores) {
                for (var i = 0; i < errores.length; i++) {
                    if (errores[i].Estado)
                        toastr.success(errores[i].Respuesta)
                    else
                        toastr.error(errores[i].Respuesta)
                }
            }

            //$('#CodigoCatalogoTipoContacto').change(function (e) {
            //    debugger
            //    mostrarElementosFormulario();

            //    var tipo = this.value;
            //    if (tipo == 260) {
            //        ocultarListadoElementos(camposOcultarContactoCliente)
            //    }
            //    if (tipo == 261) {
            //        ocultarListadoElementos(camposOcultarContactoFacturacion)
            //    }
            //});

        $('#cargo_contacto').autoComplete({
            resolver: 'custom',
            noResultsText: 'No se encontraron resultados.',
            events: {
                search: function (qry, callback) {
                    $.ajax(
                        '@Url.Action("_GetItemsCargos", "ContactoCliente")',
                        {
                            data: { 'busqueda': qry }
                        }
                    ).done(function (res) {
                        callback(res.results)
                    });
                }
            }
        });

        $('#cargo_contacto').on('autocomplete.select', function (e, item) {
            debugger
            var id = item.id;
            var texto = item.texto;
            $("#CodigoCatalogoCargoContacto").val(id);
        });

        });

        $('form').submit(function (event) {
         debugger
            event.preventDefault(); //this will prevent the default submit
            var flag = true;
          // your code here (But not asynchronous code such as Ajax because it does not wait for response and move to next line.)
            $('.campo-requerido').each(function (index, value) {
                debugger
                if ($(this).val() == "" && $(this).is(":visible")) {
                    console.log('Please fill all the fields');
                    flag = false;
                }
            });

            if (flag) {
                $(this).unbind('submit').submit(); // continue the submit unbind preventDefault
            } else {
                toastr.error('@Mensajes.MensajeDatosObligatorios')
            }

        })
    </script>
}


@* SCRIPT PARA EL COMPONENTE DE AUTOCOMPLETAR - FORMULARIO MODAL CREAR CONTACTO *@
@section SeccionScriptAutocomplete {
    <script src="https://cdn.jsdelivr.net/gh/xcash/bootstrap-autocomplete@v2.2.2/dist/latest/bootstrap-autocomplete.min.js"></script>
}
