
@model IEnumerable<GestionPPM.Entidades.Modelo.CodigoCotizacionInfo>

@(Html
    .Grid(Model)
    .Build(columns =>
    {

        //columns.Add(model => model.NombresApellidosUsuario).Titled("Usuario");
        columns.Add(model => model.fecha_cotizacion).Titled("Fecha Cotización").Formatted("{0:d}");
        columns.Add(model => model.Anio_FechaCotizacion).Titled("Año");
        columns.Add(model => model.Mes_FechaCotizacion).Titled("Mes");
        columns.Add(model => model.codigo_cotizacion).Titled("Código Cotización");
        columns.Add(model => model.EstatusCodigo).Titled("Estatus código");
        columns.Add(model => model.Responsable).Titled("Responsable");
        columns.Add(model => model.nombre_comercial_cliente).Titled("Cliente");
        columns.Add(model => model.TipoCliente).Titled("Tipo Cliente");
        columns.Add(model => model.nombre_proyecto).Titled("Nombre Proyecto");
        columns.Add(model => model.descripcion_proyecto).Titled("Descripción Proyecto");
        columns.Add(model => model.Ejecutivo).Titled("Ejecutivo");
        columns.Add(model => model.TipoRequerido).Titled("Tipo Requerimiento");
        columns.Add(model => model.TipoFEE).Titled("Tipo FEE");
        columns.Add(model => model.TipoProyecto).Titled("Tipo Proyecto");
        columns.Add(model => model.EtapaCliente).Titled("Fases");
        columns.Add(model => model.TipoEtapaPTOP).Titled("Etapa PTOP");
        columns.Add(model => model.AplicaContrato).Titled("Aplica Contrato");

        columns.Add(model => model.forma_pago).Titled("Pagos Parciales");
        columns.Add(model => (((Math.Round(model.forma_pago_1.Value, 2).ToString("N2")).Replace(",", "-")).Replace(".", ",")).Replace("-", ".") + "%").Titled("Pago 1");
        columns.Add(model => (((Math.Round(model.forma_pago_2.Value, 2).ToString("N2")).Replace(",", "-")).Replace(".", ",")).Replace("-", ".") + "%").Titled("Pago 2");
        columns.Add(model => (((Math.Round(model.forma_pago_3.Value, 2).ToString("N2")).Replace(",", "-")).Replace(".", ",")).Replace("-", ".") + "%").Titled("Pago 3");
        columns.Add(model => (((Math.Round(model.forma_pago_4.Value, 2).ToString("N2")).Replace(",", "-")).Replace(".", ",")).Replace("-", ".") + "%").Titled("Pago 4");

        //columns.Add(model => model.forma_pago_1).Titled("Pago 1").RenderedAs(model => model.forma_pago_1.HasValue  ? model.forma_pago_1.ToString() + "%" : "0%");
        //columns.Add(model => model.forma_pago_2).Titled("Pago 2").RenderedAs(model => model.forma_pago_2.HasValue  ? model.forma_pago_2.ToString() + "%" : "0%");
        //columns.Add(model => model.forma_pago_3).Titled("Pago 3").RenderedAs(model => model.forma_pago_3.HasValue  ? model.forma_pago_3.ToString() + "%" : "0%");
        //columns.Add(model => model.forma_pago_4).Titled("Pago 4").RenderedAs(model => model.forma_pago_4.HasValue  ? model.forma_pago_4.ToString() + "%" : "0%");

        columns.Add(model => (((Math.Round(model.TotalSubLineaNegocio, 2).ToString("N2")).Replace(",", "-")).Replace(".", ",")).Replace("-", ".")).AppendCss("alinear-derecha").Titled("Total (US$)");

        columns.Add(model => model.Facturable).Titled("Facturable");
        columns.Add(model => model.CreacionSAFI).Titled("Creación SAFI");

    })
    .Empty(Mensajes.MensajeNoDataListado)
    .Id("grid-CodigoCotizacion")
    .Pageable(pager =>
    {
        pager.PagesToDisplay = 5;
        pager.RowsPerPage = 10;
    })
    .Filterable()
    .Sortable())

