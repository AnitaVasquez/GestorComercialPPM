@model IEnumerable<GestionPPM.Entidades.Modelo.ListadoTablaPlanes>
@{
    var acciones = (List<string>)ViewBag.AccionesUsuario;
}

@(Html
            .Grid(Model)
            .Build(columns =>
            {
                columns.Add(model => model.Codigo).Titled("Id");
                columns.Add(model => model.Nombre_Plan).Titled("Nombre Plan");
                columns.Add(model => (((Math.Round(model.Transaccion_Minima.Value, 0).ToString("N0")).Replace(",", "-")).Replace(".", ",")).Replace("-", ".")).AppendCss("alinear-derecha").Titled("TRX Mínima");
                columns.Add(model => (((Math.Round(model.Transaccion_Maxima.Value, 0).ToString("N0")).Replace(",", "-")).Replace(".", ",")).Replace("-", ".")).AppendCss("alinear-derecha").Titled("TRX Máxima");
                columns.Add(model => (((Math.Round(model.Valor_Minimo.Value, 2).ToString("N2")).Replace(",", "-")).Replace(".", ",")).Replace("-", ".")).AppendCss("alinear-derecha").Titled("Valor Mínimo (US$)");
                columns.Add(model => (((Math.Round(model.Valor_Maximo.Value, 2).ToString("N2")).Replace(",", "-")).Replace(".", ",")).Replace("-", ".")).AppendCss("alinear-derecha").Titled("Valor Máximo (US$)");
                columns.Add(model => model.Tipo_Cobro + (((Math.Round(model.Costo_Transaccion.Value, 2).ToString("N2")).Replace(",", "-")).Replace(".", ",")).Replace("-", ".")).AppendCss("alinear-derecha").Titled("Costo x Transacción");
                columns.Add(model => (((Math.Round(model.Valor_Pago_Mínimo.Value, 2).ToString("N2")).Replace(",", "-")).Replace(".", ",")).Replace("-", ".")).AppendCss("alinear-derecha").Titled("Costo Fijo (US$)");
                columns.Add(model => model.Estado_Plan).Titled("Estado");
                columns.Add(model => "<button style='background-color:#00AD8E;border-color: #00AD8E;' class='btn btn-success " + Auxiliares.GestionBontonesGrid(acciones, "ACCIONES-SIST-01-ACTUALIZAR") + "' onclick='location.href=\"" + @Url.Action("Edit", "TablaPlanes", new { id = model.Codigo }) + "\"' id='editar' data-id=\"" + model.Codigo + "\"><span class='glyphicon glyphicon-pencil' aria-hidden='true'></span></button>" +
                "<button onclick='ConfirmarCambioEstado(" + model.Codigo + ",\"" + @Url.Action("Eliminar", "TablaPlanes") + "\",\"" + model.Estado_Plan + "\");' style='background-color:#FF5E00;border-color:#FF5E00;' class='btn btn-danger " + Auxiliares.GestionBontonesGrid(acciones, "ACCIONES-SIST-01-ELIMINAR") + "' id='eliminar' data-id=\"" + model.Codigo + "\"><span class='glyphicon glyphicon-random' aria-hidden='true'></span></button>").Encoded(false);
            })
            .Empty(Mensajes.MensajeNoDataListado)
            .Id("grid-TablaPlanes")
            .Pageable(pager =>
            {
                pager.PagesToDisplay = 5;
                pager.RowsPerPage = 10;
            })
            .Filterable()
            .Sortable())

