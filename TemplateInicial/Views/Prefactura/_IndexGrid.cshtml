@model IEnumerable<GestionPPM.Entidades.Modelo.PrefacturaSAFIInfo>
@{
    var acciones = (List<string>)ViewBag.AccionesUsuario;
}
@(Html
        .Grid(Model)
        .Build(columns =>
        {
            columns.Add(model => "<input class='seleccion-item' type='checkbox' id= \"" + model.id_facturacion_safi + "\" />").Titled(Html.CheckBox("CheckAll", false, new { @id = "seleccionar-todo", @title = "Seleccionar todos los elementos mostrados en la página." })).Encoded(false);
            //columns.Add(model => "<div class='checkbox'><input class='seleccion-item' type='checkbox' id= \"" + model.IDActa + "\" /> <label for=\"" + model.IDActa + "\"></label></div>").Titled(Html.CheckBox("CheckAll", false, new { @id = "seleccionar-todo", @title = "Seleccionar todos los elementos mostrados en la página." })).Encoded(false);
            //columns.Add(model => Html.CheckBox("Check_" + model.IDActa)).Titled(Html.CheckBox("CheckAll")).Encoded(false);
            columns.Add(model => model.id_facturacion_safi).Titled("ID Documento").Css("hidden");
            columns.Add(model => model.codigo_cotizacion).Titled("Código de Cotización").AppendCss("celda-grande");
            columns.Add(model => model.numero_prefactura).Titled("Número PreFactura").AppendCss("celda-grande");
            columns.Add(model => model.MKT).Titled("MKT").AppendCss("celda-grande");
            //columns.Add(model => model.AprobacionFinal).Titled("Aprobada").AppendCss("celda-grande");
            columns.Add(model => model.PrefacturaConsolidada).Titled("Consolidada").AppendCss("celda-grande");
                                

            columns.Add(model => model.nombre_comercial_cliente).Titled("Cliente").AppendCss("celda-grande");
            columns.Add(model => model.detalle_cotizacion).Titled("Detalle").AppendCss("celda-grande");
            columns.Add(model => model.fecha_aprobacion_prefactura_ejecutivo).Titled("Fecha Aprobación Ejecutivo").Formatted("{0:d}").AppendCss("celda-grande");
            columns.Add(model => model.Ejecutivo).Titled("Ejecutivo").AppendCss("celda-grande");

            //columns.Add(model => model.TipoDocumento).Titled("Tipo de Documento").AppendCss("celda-mediana");
                                
            columns.Add(model => model.cantidad).Titled("Cantidad").AppendCss("celda-grande");
            //columns.Add(model => (((Math.Round(model.precio_unitario, 2).ToString("N2").Replace(",", "-")).Replace(".", ",")).Replace("-", "."))).Titled("Precio").AppendCss("celda-grande");
            columns.Add(model => (((Math.Round(model.subtotal_pago, 2).ToString("N2").Replace(",", "-")).Replace(".", ",")).Replace("-", "."))).Titled("Subtotal").AppendCss("celda-grande");
            columns.Add(model => (((Math.Round(model.iva_pago, 2).ToString("N2").Replace(",", "-")).Replace(".", ",")).Replace("-", "."))).Titled("IVA").AppendCss("celda-grande");
            columns.Add(model => (((Math.Round(model.total_pago, 2).ToString("N2").Replace(",", "-")).Replace(".", ",")).Replace("-", "."))).Titled("Total").AppendCss("celda-grande");
            //columns.Add(model => " <a title='Ver archivos adjuntos solicitud.' data-backdrop='static' data-toggle='modal' data-target='#contenido-modal' onclick='_GetCreate({id:" + model.id_solicitud + "},\"" + @Url.Action("_AdjuntarArchivos", "SolicitudesClienteExterno") + "\");' class='abrirEnlace' id='ver-adjuntos' data-id=\"" + model.id_solicitud + "\"><i class='glyphicon glyphicon-folder-open' aria-hidden='true'></i></a>").Titled("Solicitud").AppendCss("celda-grande").Encoded(false);
            //columns.Add(model => Auxiliares.ConvertToListHtml(model.PreFacturasSAFI, model.IDsPreFacturasSAFI, Url.Action("GeneracionPrefactura", "DocumentoSAFI"))).Css("fixed-width").Titled("PreFacturas").AppendCss("celda-grande").Filterable(true).Encoded(false);
            //columns.Add(model => model.Lugar).Titled("Lugar").AppendCss("celda-mediana").Css("celda-centrada");
            columns.Add(model =>
            " <a title='Aprobar Prefactura.' data-backdrop='static' data-toggle='modal' data-target='#contenido-modal' onclick='_GetCreate({id:" + model.id_facturacion_safi + "},\"" + @Url.Action("_AprobarPrefactura", "Prefactura") + "\");' style='cursor: pointer;background-color:#ccc;border-color:#ccc; display:" + (!model.aprobacion_final.Value && !model.prefactura_consolidada.Value || Auxiliares.GestionBontonesGrid(acciones, "ACCIONES-SIST-01-APROBAR").Equals("ocultar-accion-catalogo") ? "block" : "none") + ";' class='btn btn-success " + Auxiliares.GestionBontonesGrid(acciones, "ACCIONES-SIST-01-APROBAR") + "' id='aprobar' data-id=\"" + model.id_facturacion_safi + "\"><i style='color: black;' class='fa fa-thumbs-o-up' aria-hidden='true'></i></a>" +
            " <a title='Reversar Consolidación.' data-backdrop='static' data-toggle='modal' data-target='#contenido-modal' onclick='_GetCreate({id:" + model.id_facturacion_safi + "},\"" + @Url.Action("_Reversar", "Prefactura") + "\");' style='cursor: pointer;background-color:#ffc52d;border-color:#ffc52d; display:" + (!model.aprobacion_final.Value && !model.prefactura_consolidada.Value && model.id_codigo_cotizacion == 0 || Auxiliares.GestionBontonesGrid(acciones, "ACCIONES-SIST-01-REVERSAR").Equals("ocultar-accion-catalogo") ? "block" : "none") + ";' class='btn btn-success " + Auxiliares.GestionBontonesGrid(acciones, "ACCIONES-SIST-01-REVERSAR") + "' id='reversar' data-id=\"" + model.id_facturacion_safi + "\"><i style='color: black;' class='fa fa-reply' aria-hidden='true'></i></a>"
            /*+" <button style='background-color:#FFC52D;border-color: #FFC52D;'  class='btn btn-warning' onclick='location.href=\"" + @Url.Action("GeneracionPrefactura", "DocumentoSAFI", new { listadoIDs = model.id_facturacion_safi, descargaDirecta = true }) + "\"' id='imprimir-prefactura' data-id=\"" + model.id_facturacion_safi + "\"><span class='glyphicon glyphicon-print' aria-hidden='true' style='color:black'></span></button>"*/).AppendCss("celda-pequenia").Encoded(false);
        })
        //.RowAttributed(model => new { data_id = model.CuerpoCorreo })
        .Empty(Mensajes.MensajeNoDataListado)
        .Id("grid-DocumentoSAFI")
        .Pageable(pager =>
        {
            pager.PagesToDisplay = 5;
            pager.RowsPerPage = 10;
        })
        .Filterable()
        .Sortable())



