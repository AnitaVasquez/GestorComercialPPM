@model GestionPPM.Entidades.Modelo.Rol

@{
    ViewBag.Title = "Crear Rol";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@* Formato para el template de datos *@
<link href="~/Content/css/personalizar.css" rel="stylesheet" />

<link rel="stylesheet" type="text/css" href="~/Content/themes/default/easyui.css">
<link rel="stylesheet" type="text/css" href="~/Content/themes/icon.css">
<link rel="stylesheet" type="text/css" href="~/Content/css/demo.css">

<form action="#" id="form-rol" role="form" data-toggle="validator" method="post" accept-charset="utf-8">
    <div class="row">
        <div class="col-md-offset-2 col-md-8">
            <div class="panel">

                <div class="panel-heading-create custom-header-panel">
                    <h4>@Etiquetas.TituloPanelCreacionRol</h4>
                </div>

                <div class="panel-body">
                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @*@Html.LabelFor(model => model.nombre_rol, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <label class="control-label col-md-3">Nombre: <span class="requerido"> *</span></label>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.nombre_rol, new { htmlAttributes = new { @class = "form-control campo-requerido", maxlength = 150 } })
                                @*@Html.ValidationMessageFor(model => model.nombre_rol, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.descripcion_rol, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <label class="control-label col-md-3">Descripción: <span class="requerido"> *</span></label>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.descripcion_rol, new { htmlAttributes = new { @class = "form-control campo-requerido", maxlength = 200 } })
                                @Html.ValidationMessageFor(model => model.descripcion_rol, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3">Perfiles:</label>
                            <div class="col-md-8">
                                @*@(Html.Awe().AjaxCheckboxList("idsPerfiles_guardar")
        .Multiselect(o => o.ItemFunc("awem.imgItem").CaptionFunc("").NoSelectClose())
        .CssClass("auto-ajustar")
        .Url(Url.Action("GetPerfiles", "Rol")))*@


                                <input class="easyui-tagbox auto-ajustar" id="idsPerfiles_guardar" name="idsPerfiles_guardar" style="width:100%" data-options="
                url: '@Url.Action("_GetPerfiles", "Rol")',
                method: 'get',
                value: '',
                valueField: 'id',
                textField: 'text',
                limitToList: true,
                hasDownArrow: true,
                ">

                            </div>
                        </div>

                        <div style="display: none;" class="form-group">
                            @Html.LabelFor(model => model.estado_rol, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.estado_rol)
                                    @Html.ValidationMessageFor(model => model.estado_rol, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <br />

                        <div class="form-group">
                            <div class="col-md-offset-4 col-md-12">
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                <input id="guardar" type="button" value="Guardar" class="btn btn-default" />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-default" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>


@section SeccionScriptMultiSelect {
    <script src="~/Scripts/easyloader.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.easyui.min.js"></script>
    <script src="~/Scripts/locale/easyui-lang-es.js"></script>
}

@section ViewSpecificJavascript {
    <script>
            var urlAccionGuardar = '@Url.Action("Create","Rol")';
            var urlAccionListado = '@Url.Action("Index","Rol")';

    $("#guardar").click(function () {
        debugger
                var flag = true;
                // your code here (But not asynchronous code such as Ajax because it does not wait for response and move to next line.)
                $('#form-rol .campo-requerido').each(function (index, value) {
                    //debugger
                    if ($(this).val() == "" && $(this).is(":visible")) {
                        //console.log('Please fill all the fields');
                        flag = false;
                    }
                });

                if (flag) {
                    guardar(); // continue the submit unbind preventDefault
                } else {
                    toastr.error('@Mensajes.MensajeDatosObligatorios')
                }
         })
         function guardar() {
        debugger
        var data_form = JSON.stringify({ "rol": $('#form-rol').serializeObject(), "perfiles": getPerfiles() })
        _Guardar(data_form, urlAccionGuardar, urlAccionListado)
        }

        function getPerfiles() {
            debugger
            var idsOpcionesMenu = [];
            var opciones = $("#idsPerfiles_guardar").val();
            opciones = opciones.split(',');

            for (var i = 0; i < opciones.length; i++) {
                let id = parseInt(opciones[i]);
                idsOpcionesMenu.push(id);
            }
            return idsOpcionesMenu;
        }


    </script>
}
